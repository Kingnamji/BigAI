# -*- coding: utf-8 -*-
"""# 210430

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MLnOgwyGyVd8C5pEABsWYNF-m2Ff0Iis
"""

# 210430 복습내용

# 1. 소수 판별기
def isPrime(num):
    if num == 1:
        return False
    elif num == 2:
        return True
    else:
        i = 2
        while i <= num**0.5:
            if num % i == 0:
                return False
            i += 1

        return True

# 2. n번째 피보나치 수 출력
def fib(n):
    if n == 0:
        return 0
    else:
        i_0 = 0
        i_1 = 1

        for _ in range(1,n):
            temp = i_1
            i_1 = i_1 + i_0
            i_0 = temp
    return i_1

# 3. a,b의 최대 공약수
def gcd(a, b): # Euclidean algorithm, a = q*b + r
    if a < 0:
        a = -a
    if b< 0 :
        b = -b

    if a < b:
        temp = a
        a = b
        b = temp

    while b:
        r = a % b
        a = b
        b = r

    return a

# 4. 최대 공배수
def lcm(a,b):
    return a*b // gcd(a,b)